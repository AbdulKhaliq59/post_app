name: Flutter CI/CD - PR Check

# Only run on Pull Requests
on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

jobs:
  analyze-and-test:
    name: Analyze and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'

    - name: Cache Flutter dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.pub-cache
          **/.dart_tool
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
        restore-keys: |
          ${{ runner.os }}-flutter-

    - name: Install dependencies
      run: flutter pub get

    - name: Verify Flutter setup
      run: flutter doctor

    - name: Generate code (mocks, etc.)
      run: dart run build_runner build --delete-conflicting-outputs

    - name: Analyze code
      run: flutter analyze

    - name: Check formatting
      run: dart format --output=none --set-exit-if-changed .

    - name: Run tests with coverage
      run: flutter test --coverage --reporter=github

    - name: Check test coverage
      uses: VeryGoodOpenSource/very_good_coverage@v3
      with:
        path: coverage/lcov.info
        min_coverage: 80



    - name: Comment PR with coverage
      uses: romeovs/lcov-reporter-action@v0.3.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        lcov-file: coverage/lcov.info

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'

    - name: Install dependencies
      run: flutter pub get

    - name: Generate code
      run: dart run build_runner build

    - name: Run integration tests
      run: flutter test integration_test/

  pr-status-check:
    name: PR Status Check
    runs-on: ubuntu-latest
    needs: [analyze-and-test, integration-tests]
    if: always()

    steps:
    - name: Check results
      run: |
        if [[ "${{ needs.analyze-and-test.result }}" == "success" && "${{ needs.integration-tests.result }}" == "success" ]]; then
          echo "‚úÖ All checks passed! PR is ready for review."
        else
          echo "‚ùå Some checks failed. Please fix the issues before merging."
          if [[ "${{ needs.analyze-and-test.result }}" != "success" ]]; then
            echo "  - Unit tests or code analysis failed"
          fi
          if [[ "${{ needs.integration-tests.result }}" != "success" ]]; then
            echo "  - Integration tests failed"
          fi
          exit 1
        fi

    - name: Add PR comment on success
      if: needs.analyze-and-test.result == 'success' && needs.integration-tests.result == 'success'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '‚úÖ All Flutter tests passed! This PR is ready for review. üöÄ'
          })

    - name: Add PR comment on failure
      if: needs.analyze-and-test.result != 'success' || needs.integration-tests.result != 'success'
      uses: actions/github-script@v7
      with:
        script: |
          const testStatus = '${{ needs.analyze-and-test.result }}' === 'success' ? '‚úÖ' : '‚ùå';
          const integrationStatus = '${{ needs.integration-tests.result }}' === 'success' ? '‚úÖ' : '‚ùå';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## Flutter CI/CD Results
            
            ${testStatus} **Unit Tests & Code Analysis**: ${{ needs.analyze-and-test.result }}
            ${integrationStatus} **Integration Tests**: ${{ needs.integration-tests.result }}
            
            ${needs.analyze-and-test.result !== 'success' || needs.integration-tests.result !== 'success' ? 
            'Please fix the failing tests before merging this PR.' : 
            'All tests passed! üéâ'}`
          })